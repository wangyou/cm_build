diff --git a/cmds/pm/src/com/android/commands/pm/Pm.java b/cmds/pm/src/com/android/commands/pm/Pm.java
index d1ded10..1414044 100644
--- a/cmds/pm/src/com/android/commands/pm/Pm.java
+++ b/cmds/pm/src/com/android/commands/pm/Pm.java
@@ -43,6 +43,7 @@ import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.UserHandle;
 import android.os.UserManager;
+import android.os.SystemProperties;
 
 import java.io.File;
 import java.io.FileDescriptor;
@@ -940,6 +941,12 @@ public final class Pm {
             return;
         }
 
+        // Install apk file when android.pm.updateonly is not 1
+        if ("1".equals(SystemProperties.get("android.pm.updateonly"))){
+            System.err.println("pm is updateonly mode.");
+            return;
+        }
+
         // Populate verificationURI, optionally present
         final String verificationFilePath = nextArg();
         if (verificationFilePath != null) {
diff --git a/core/java/android/app/ApplicationPackageManager.java b/core/java/android/app/ApplicationPackageManager.java
index ff77067..8a7ae4d 100644
--- a/core/java/android/app/ApplicationPackageManager.java
+++ b/core/java/android/app/ApplicationPackageManager.java
@@ -59,6 +59,7 @@ import android.view.Display;
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.List;
+import android.os.SystemProperties;
 
 /*package*/
 final class ApplicationPackageManager extends PackageManager {
@@ -1085,7 +1086,10 @@ final class ApplicationPackageManager extends PackageManager {
     public void installPackage(Uri packageURI, IPackageInstallObserver observer, int flags,
                                String installerPackageName) {
         try {
-            mPM.installPackage(packageURI, observer, flags, installerPackageName);
+            if ("1".equals(SystemProperties.get("android.pm.updateonly")))
+		observer.packageInstalled(installerPackageName, PackageManager.MOVE_FAILED_INTERNAL_ERROR);
+	    else
+                mPM.installPackage(packageURI, observer, flags, installerPackageName);
         } catch (RemoteException e) {
             // Should never happen!
         }
@@ -1096,7 +1100,10 @@ final class ApplicationPackageManager extends PackageManager {
             int flags, String installerPackageName, Uri verificationURI,
             ManifestDigest manifestDigest, ContainerEncryptionParams encryptionParams) {
         try {
-            mPM.installPackageWithVerification(packageURI, observer, flags, installerPackageName,
+            if ("1".equals(SystemProperties.get("android.pm.updateonly")))
+		observer.packageInstalled(installerPackageName, PackageManager.MOVE_FAILED_INTERNAL_ERROR);
+	    else
+                mPM.installPackageWithVerification(packageURI, observer, flags, installerPackageName,
                     verificationURI, manifestDigest, encryptionParams);
         } catch (RemoteException e) {
             // Should never happen!
@@ -1108,7 +1115,10 @@ final class ApplicationPackageManager extends PackageManager {
             IPackageInstallObserver observer, int flags, String installerPackageName,
             VerificationParams verificationParams, ContainerEncryptionParams encryptionParams) {
         try {
-            mPM.installPackageWithVerificationAndEncryption(packageURI, observer, flags,
+             if ("1".equals(SystemProperties.get("android.pm.updateonly")))
+		observer.packageInstalled(installerPackageName, PackageManager.MOVE_FAILED_INTERNAL_ERROR);
+	    else
+                mPM.installPackageWithVerificationAndEncryption(packageURI, observer, flags,
                     installerPackageName, verificationParams, encryptionParams);
         } catch (RemoteException e) {
             // Should never happen!
