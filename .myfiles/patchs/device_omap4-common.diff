diff --git a/libhealthd/healthd_board_omap4.cpp b/libhealthd/healthd_board_omap4.cpp
index 9b8b65c..a699fdf 100644
--- a/libhealthd/healthd_board_omap4.cpp
+++ b/libhealthd/healthd_board_omap4.cpp
@@ -19,7 +19,7 @@
 
 void healthd_board_init(struct healthd_config *config)
 {
-    config->batteryCapacityPath = "/sys/class/power_supply/battery/charge_counter";
+    config->batteryChargeCounterPath = "/sys/class/power_supply/battery/charge_counter";
 }
 
 
diff --git a/pvr-source/services4/system/omap4/sgxfreq.c b/pvr-source/services4/system/omap4/sgxfreq.c
index 7e8e8fd..2c32108 100644
--- a/pvr-source/services4/system/omap4/sgxfreq.c
+++ b/pvr-source/services4/system/omap4/sgxfreq.c
@@ -107,6 +107,26 @@ static ssize_t show_frequency_limit(struct device *dev,
 	return sprintf(buf, "%lu\n", sfd.freq_limit);
 }
 
+/*
+ * sysfs interface to store sgxfreq frequency limit
+ * author: ketut.kumajaya@gmail.com
+*/
+static ssize_t store_frequency_limit(struct device *dev,
+            struct device_attribute *attr,
+            const char *buf, size_t count)
+{
+  unsigned long freq_limit;
+
+  if (kstrtoul(buf, 0, &freq_limit)) {
+    pr_err("sgxfreq: failed storing frequency_limit\n");
+    return -EINVAL;
+  }
+
+  freq_limit = sgxfreq_set_freq_limit(freq_limit);
+  pr_info("sgxfreq: frequency_limit=%lu\n", freq_limit);
+  return count;
+}
+
 static ssize_t show_frequency(struct device *dev,
 			      struct device_attribute *attr,
 			      char *buf)
@@ -169,7 +189,7 @@ static ssize_t store_governor(struct device *dev,
 
 static DEVICE_ATTR(frequency_list, 0444, show_frequency_list, NULL);
 static DEVICE_ATTR(frequency_request, 0444, show_frequency_request, NULL);
-static DEVICE_ATTR(frequency_limit, 0444, show_frequency_limit, NULL);
+static DEVICE_ATTR(frequency_limit, 0644, show_frequency_limit, store_frequency_limit);
 static DEVICE_ATTR(frequency, 0444, show_frequency, NULL);
 static DEVICE_ATTR(governor_list, 0444, show_governor_list, NULL);
 static DEVICE_ATTR(governor, 0644, show_governor, store_governor);
