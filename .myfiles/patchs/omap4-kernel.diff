diff --git a/drivers/misc/omap_temp_sensor.c b/drivers/misc/omap_temp_sensor.c
index 8ecb1bf..090765f 100644
--- a/drivers/misc/omap_temp_sensor.c
+++ b/drivers/misc/omap_temp_sensor.c
@@ -420,7 +420,11 @@ static void throttle_delayed_work_fn(struct work_struct *work)
 					     throttle_work.work);
 	curr = omap_read_current_temp(temp_sensor);
 
+#ifdef CONFIG_OMAP_TEMP_CONTROL
 	if (curr >= hot_threshold || curr < 0) {
+#else
+	if (curr >=BGAP_THRESHOLD_T_HOT || curr < 0) {
+#endif
 		pr_warn("%s: OMAP temp read %d exceeds the threshold\n",
 			__func__, curr);
 		omap_thermal_throttle();
@@ -492,7 +496,9 @@ static int __devinit omap_temp_sensor_probe(struct platform_device *pdev)
 	}
 
 	temp_sensor = kzalloc(sizeof(struct omap_temp_sensor), GFP_KERNEL);
+#ifdef CONFIG_OMAP_TEMP_CONTROL
 	ctrl_sensor = temp_sensor;
+#endif
 	
 	if (!temp_sensor)
 		return -ENOMEM;
diff --git a/drivers/staging/zcache/zbud.h b/drivers/staging/zcache/zbud.h
index e69de29..891e8a7 100644
--- a/drivers/staging/zcache/zbud.h
+++ b/drivers/staging/zcache/zbud.h
@@ -0,0 +1,33 @@
+/*
+ * zbud.h
+ *
+ * Copyright (c) 2010-2012, Dan Magenheimer, Oracle Corp.
+ *
+ */
+
+#ifndef _ZBUD_H_
+#define _ZBUD_H_
+
+#include "tmem.h"
+
+struct zbudref;
+
+extern unsigned int zbud_max_buddy_size(void);
+extern struct zbudref *zbud_match_prep(struct tmem_handle *th, bool eph,
+						void *cdata, unsigned size);
+extern struct zbudref *zbud_create_prep(struct tmem_handle *th, bool eph,
+						void *cdata, unsigned size,
+						struct page *newpage);
+extern void zbud_create_finish(struct zbudref *, bool);
+extern int zbud_decompress(struct page *, struct zbudref *, bool,
+				void (*func)(char *, unsigned int, char *));
+extern int zbud_copy_from_zbud(char *, struct zbudref *, size_t *, bool);
+extern int zbud_copy_to_zbud(struct zbudref *, char *, bool);
+extern struct page *zbud_free_and_delist(struct zbudref *, bool eph,
+						unsigned int *, unsigned int *);
+extern struct page *zbud_evict_pageframe_lru(unsigned int *, unsigned int *);
+extern unsigned int zbud_make_zombie_lru(struct tmem_handle *, unsigned char **,
+						unsigned int *, bool);
+extern void zbud_init(void);
+
+#endif /* _ZBUD_H_ */
