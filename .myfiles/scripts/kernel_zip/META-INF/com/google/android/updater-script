
# Start
set_progress(0.05);

#mount("ext3", "EMMC", "/dev/block/system", "/system");

ui_print("Setting up required tools...");
package_extract_file("utils/mount", "/tmp/mount");
set_perm(0, 0, 0755, "/tmp/mount");

ui_print("mounting partions...");
run_program("/tmp/mount", "/system");
run_program("/tmp/mount", "/ext");

##############################################################
#                                                            #
#   		      Aroma Installer   	             #
#                                                            #
##############################################################
set_progress(0.03);
if
      file_getprop("/tmp/aroma/install.prop","item.1.1") == "1"
    then
      ui_print("@  Backing up current kernel and modules");
	delete_recursive("/ext/kernel_backup");
	run_program("/sbin/mkdir", "-p", "/ext/kernel_backup");
	run_program("/sbin/mkdir", "-p", "/ext/kernel_backup/modules");
	run_program("/sbin/cp", "-f", "/system/etc/kexec/kernel", "/ext/kernel_backup/kernel");
	run_program("/sbin/cp", "-rf", "/system/lib/modules", "/ext/kernel_backup/");
	run_program("/sbin/cp", "-f", "/system/lib/libc.so", "/ext/kernel_backup/");
	run_program("/sbin/cp", "-f", "/system/lib/libdl.so", "/ext/kernel_backup/");
	run_program("/sbin/cp", "-f", "/system/lib/libm.so", "/ext/kernel_backup/");
	run_program("/sbin/cp", "-f", "/system/lib/libstdc++.so", "/ext/kernel_backup/");
endif;
set_progress(0.06);

if
      file_getprop("/tmp/aroma/install.prop","item.1.3") == "1"
    then
      ui_print("@  Restoring prior kernel and modules");
	delete_recursive("/system/lib/modules");
	delete("/system/etc/kexec/kernel");
	delete("/system/lib/libc.so");
	delete("/system/lib/libstdc++.so");
	delete("/system/lib/libdl.so");
	delete("/system/lib/libm.so");

	run_program("/sbin/cp", "-f", "/ext/kernel_backup/kernel", "/system/etc/kexec/kernel");
	run_program("/sbin/cp", "-rf", "/ext/kernel_backup/modules", "/system/lib/");
	run_program("/sbin/cp", "-f", "/ext/kernel_backup/libc.so", "/system/lib/");
	run_program("/sbin/cp", "-f", "/ext/kernel_backup/libstdc++.so", "/system/lib/");
	run_program("/sbin/cp", "-f", "/ext/kernel_backup/libdl.so", "/system/lib/");
	run_program("/sbin/cp", "-f", "/ext/kernel_backup/libm.so", "/system/lib/");
	delete("/system/etc/init.d/01kernel");
	delete("/system/etc/init.d/60sdche");
	delete("/system/etc/init.d/00tweaks");
	delete("/system/etc/init.d/02kernel_net");
	delete("/system/etc/init.d/03nmi_watchdog_off");
	delete("/system/etc/init.d/04kernel_memory");
	delete("/system/etc/init.d/06Sleepytime");
	delete("/system/etc/init.d/71sqloptimize");
	delete("/system/etc/init.d/S70zipalign");
	delete("/system/etc/init.d/S99_Battery_Friend");
	delete("/system/etc/init.d/32netspeed");
endif;
set_progress(0.13);

if
      file_getprop("/tmp/aroma/install.prop","item.1.2") == "1"
    then
      ui_print("@  Installing Kernel");
	package_extract_dir("system", "/system");
	set_progress(0.85);
endif;
set_progress(0.14);


##############################################################
#               Aroma Installer For JBX-Kernel	             #
##############################################################
# Permissions
if
      file_getprop("/tmp/aroma/install.prop","item.1.3") == "1" || file_getprop("/tmp/aroma/install.prop","item.1.2") == "1"
    then
      ui_print("@   set premissions");
      set_perm_recursive(0, 0, 0775, 0644, "/system/app");
      set_perm_recursive(0, 0, 0755, 0644, "/system/etc/kexec");
      set_perm_recursive(0, 0, 0755, 0644, "/system/lib/modules");
      set_perm_recursive(0, 2000, 0755, 0755, "/system/etc/init.d");
      set_perm(0, 0, 0755, "/system/etc/init.d");
      set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
      set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
      set_perm(0, 0, 06755, "/system/xbin/su");
      set_progress(0.97);
endif;

# Wipe
ui_print("Clean up");
delete_recursive("/tmp/aroma");

set_progress(1);
#ui_print("fix root");
#symlink("../xbin/su", "/system/bin/su");

#Finishing

ui_print("Unmounting system...");
ui_print(" ");

# Unmount
unmount("/system");
ui_print("Kernel Installed! Enjoy!");
